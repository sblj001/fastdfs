<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.yootk</groupId>
  <artifactId>fastdfs</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>
  <properties>
    <!-- 定义所有第三方依赖库的版本白拿后 -->
    <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
    <javax.servlet.jsp-api.version>2.3.3</javax.servlet.jsp-api.version>
    <junit.version>4.12</junit.version>
    <jstl.version>1.2</jstl.version>
    <first.version>1.0</first.version>
    <!-- 定义项目构建的相关环境属性 -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
    <maven-javadoc-plugin.version>3.1.0</maven-javadoc-plugin.version>
    <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
    <spring.version>5.1.8.RELEASE</spring.version>
    <!-- 定义资源与profile配置 -->
    <profiles.dir>src/main/profiles</profiles.dir>   <!-- 定义profiles父路径 -->
    <resources.dir>src/main/resources</resources.dir>   <!-- 定义resources父路径 -->
  </properties>
  <profiles>    <!-- 明确的进行具体的资源名称的配置，这个名称是在maven打包的时候使用的名称 -->
    <profile>   <!-- 定义具体的profile引用名称 -->
      <id>dev</id>    <!-- 定义profile名称为dev -->
      <properties>    <!-- 定义当前的profile属性名称 -->
        <profile.dir>${profiles.dir}/dev</profile.dir>
      </properties>
      <activation>    <!-- 如果在编译的时候没有设置任何的profile名字，则此配置生效 -->
        <activeByDefault>true</activeByDefault> <!-- 默认打包环境 -->
      </activation>
    </profile>
    <profile>   <!-- 定义具体的profile引用名称 -->
      <id>test</id>   <!-- 定义profile名称为test -->
      <properties>
        <profile.dir>${profiles.dir}/test</profile.dir>
      </properties>
    </profile>
    <profile>   <!-- 定义具体的profile引用名称 -->
      <id>product</id>   <!-- 定义profile名称为product -->
      <properties>
        <profile.dir>${profiles.dir}/product</profile.dir>
      </properties>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>cn.bestwu</groupId>
      <artifactId>fastdfs-client-java</artifactId>
      <version>1.27</version>
    </dependency>


    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${javax.servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>javax.servlet.jsp-api</artifactId>
      <version>${javax.servlet.jsp-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp.jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>news</finalName>         <!-- 表示打包生成的名称 -->
    <resources>
      <resource>
        <!-- 此处的属性是profile中统一定义的路径的名称，不同的配置文件有不同的子目录 -->
        <directory>${profile.dir}</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>${resources.dir}</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>                <!-- 进行执行配置 -->
          <execution>
            <id>sources</id>     <!-- 设置执行的id编号 -->
            <goals>
              <goal>jar</goal>    <!-- 打包生成的类型 -->
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration> <!-- 配置编码 -->
          <encoding>${project.build.sourceEncoding}</encoding>
          <failOnError>false</failOnError>    <!-- 不关心不严谨的注释 -->
        </configuration>
        <executions>    <!-- 进行执行配置 -->
          <execution>
            <id>javadocs</id>   <!-- 生成文件的标记 -->
            <goals>
              <goal>jar</goal>    <!-- 生成文件的类型 -->
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <skipTests>true</skipTests> <!-- 跳过测试 -->
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>